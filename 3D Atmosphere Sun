--[[
	HOW TO SET UP: Just put this script under ReplicatedFirst OR StarterPlayerScripts and that's it!

	This is a script which produces a three-dimensional atmosphere in your game. As
	you go up, the sky becomes darker just like in real life! In addition, it also gives you 
	the illusion of an infinite draw distance and it shows an increasing curvature of the 
	Earth as you go higher in altitude! However, ROBLOX is unplayable even before this altitude
	and the quality starts to really deteriorate after the Moon's max altitude.
	
	This is TOTALLY different in comparison to the Atmosphere object, which is simply a haze.
	
	As seen on Space Sailors!

	Feel free to use it in your game and customize it!


	IMPORTANT: 
		• MAKE SURE YOU DON'T HAVE ANY ROBLOX 'ATMOSPHERES' PRESENT IN YOUR GAME BECAUSE THEY 
		DO NOT MIX. IT WILL NOT WORK! REMOVE ANY ROBLOX 'ATMOSPHERES' BEFORE USING!

		• IF YOU CHECKED EnableApparentSunMovement UNDER EnableApparentPlanetRotation SETTING
		AND YOU WANT TO ADD A DAY/NIGHT CYCLE:

			Insert a NumberValue to the workspace and NAME IT: "ServerClockTime". That's your 
			new clock setting from then on. Redirect your day/night scripts to that value!
			If you want to know why is this the case, read the "How to Customize & Presets!" 
			doc under this script.
			

	TIP: It's recommended to have a large water mesh at sea level!

	Made by Pulsarnova (A.k.a. BangoutBoy)

	Version 64
]]


-- Yes, It is a messy script but as long as it works perfectly, that's what matters!
wait()
local Player = game.Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

-- Ensures that the player to script connection doesn't glitch!
Player.CharacterAdded:Connect(function(Char)
	Character = Char
	Humanoid = Char:WaitForChild("Humanoid")
	HumanoidRootPart = Char:WaitForChild("HumanoidRootPart")
end)

-- Removes any ROBLOX provided 'atmospheres' since they disable legacy fog which in turn makes the script malfunction.
for i,v in pairs(game.Lighting:GetDescendants())do
	if v.ClassName == "Atmosphere" then
		v:Destroy()
	end
end

-- Spawns the materials and conditions needed to produce the atmosphere.
local Run = game:GetService("RunService")
local Camera = game.Workspace.CurrentCamera
local AtmosphereModel = Instance.new("Model",workspace)
AtmosphereModel.Name = "Atmosphere"
local Atmosphere = Instance.new("Part",AtmosphereModel)
Atmosphere.CanCollide = false
Atmosphere.Anchored = true
Atmosphere.Name = "Atmosphere"
Atmosphere.Size = Vector3.new(1,1,1)
Atmosphere.Color = Color3.new(0,0,0)
Atmosphere.Position = Camera.CFrame.Position
Atmosphere.Orientation = Vector3.new(0, -90, 0)
Atmosphere.CastShadow = false
Atmosphere.Material = "Fabric"
Atmosphere.Transparency = 0
local DistantSurface = Instance.new("Part",AtmosphereModel)
DistantSurface.Size = Vector3.new(1,1,1)
DistantSurface.Color = Color3.new(33/255, 84/255, 185/255)
DistantSurface.Name = "DistantSurface"
DistantSurface.CanCollide = false
DistantSurface.Orientation = Vector3.new(0, -90, 0)
DistantSurface.CastShadow = false
DistantSurface.Anchored = true
DistantSurface.Material = "SmoothPlastic"
local SurfaceMesh = Instance.new("FileMesh",DistantSurface)
SurfaceMesh.MeshId = "rbxassetid://452341386"
SurfaceMesh.Scale = Vector3.new(700, 1000, 700)
local Mesh = Instance.new("FileMesh",Atmosphere)
Mesh.MeshId = "rbxassetid://5077225120"
Mesh.Scale = Vector3.new(7600, 3000, 7600)
Mesh.TextureId = "http://www.roblox.com/asset/?ID=2013298"
local AtmosphereApparentHeight = 5.5
local Sky = Instance.new("Sky",game.Lighting)
Sky.SkyboxBk = "http://www.roblox.com/asset/?ID=2013298"
Sky.SkyboxDn = "http://www.roblox.com/asset/?ID=2013298"
Sky.SkyboxFt = "http://www.roblox.com/asset/?ID=2013298"
Sky.SkyboxLf = "http://www.roblox.com/asset/?ID=2013298"
Sky.SkyboxRt = "http://www.roblox.com/asset/?ID=2013298"
Sky.SkyboxUp = "http://www.roblox.com/asset/?ID=2013298"
Sky.MoonAngularSize = 0.57
Sky.SunAngularSize = 1.44
game.Lighting.FogColor = Color3.new(115/255, 152/255, 255/255)
game.Lighting.FogEnd = 100000
game.Lighting.FogStart = 0
local FogEndRatio = 1
local Earth = Instance.new("Part",AtmosphereModel)
Earth.Anchored = true
Earth.Name = "EarthSurface"
Earth.CanCollide = false
Earth.Size = Vector3.new(1,1,1)
Earth.Color = Color3.new(33/255, 84/255, 185/255)
Earth.Orientation = script.Customize.EnableApparentPlanetRotation.InitialPlanetOrientation.Value
Earth.CastShadow = false
Earth.Material = "ForceField"
Earth.Transparency = 0
local EarthPositionEquation = 1
local EarthMesh = Instance.new("FileMesh",Earth)
EarthMesh.MeshId = "rbxassetid://5276376752"
EarthMesh.TextureId = "rbxassetid://2013298"
EarthMesh.VertexColor = Vector3.new((115/255)*2, (152/255)*2, 2)
local EarthTexture = Instance.new("Decal",Earth)
EarthTexture.Texture = script.Customize.PlanetTexture.Value
local EarthMeshEquation = 100000
local EarthTransparency = script.Customize.PlanetTransparency.Value
local EarthTerminator = Instance.new("Part",AtmosphereModel)
EarthTerminator.Anchored = true
EarthTerminator.Name = "EarthTerminator"
EarthTerminator.CanCollide = false
EarthTerminator.Size = Vector3.new(1,1,1)
EarthTerminator.Color = Color3.new(33/255, 84/255, 185/255)
EarthTerminator.Transparency = 1
EarthTerminator.CastShadow = false
local EarthTerminator2 = Instance.new("Part",AtmosphereModel)
EarthTerminator2.Anchored = true
EarthTerminator2.Name = "EarthTerminator2"
EarthTerminator2.CanCollide = false
EarthTerminator2.Size = Vector3.new(1,1,1)
EarthTerminator2.Color = Color3.new(33/255, 84/255, 185/255)
EarthTerminator2.Transparency = 1
EarthTerminator2.CastShadow = false
local EarthTerminatorMesh = Instance.new("FileMesh",EarthTerminator)
EarthTerminatorMesh.MeshId = "rbxassetid://5276376752"
local EarthTerminatorTexture = Instance.new("Decal",EarthTerminator)
EarthTerminatorTexture.Texture = "rbxassetid://5410829227"
local EarthTerminatorMesh2 = Instance.new("FileMesh",EarthTerminator2)
EarthTerminatorMesh2.MeshId = "rbxassetid://5276376752"
local EarthTerminatorTexture2 = Instance.new("Decal",EarthTerminator2)
EarthTerminatorTexture2.Texture = "rbxassetid://5410829627"
local ShowTerminator = 1
local FindServerClockTime = game.Workspace:FindFirstChild("ServerClockTime")
local ClockTimeExists = false
local HorizonElevationSunsetDifference10 = 10
local SunR = 255
local SunG = 255
local SunB = 255
local SunOffsetX = 0
local SunOffsetZ = 0
local InitialTime = game.Lighting.ClockTime
local InitialGL = game.Lighting.GeographicLatitude
local Extinction = script.Customize.AtmosphericExtinctionColor.AtmosphericExtinction:Clone()
Extinction.Parent = AtmosphereModel
local ExtinctionSunset = script.Customize.AtmosphericExtinctionColor.AtmosphericExtinctionSunset:Clone()
ExtinctionSunset.Parent = AtmosphereModel
local ExtinctionTransparencyMultiplier = 1
local LightEmissionEquation = 1
local ExtinctionTransparencyEquation = 0
local ExtinctionColorEquation = 255
local ExtinctionWidthEquation = 40000
local ExtinctionOrientationEquation = 81
local OutdoorAmbientBrightnessEquation = 128
local SunBrightness = 5
local AirglowLayer = Instance.new("Part",AtmosphereModel)
AirglowLayer.Anchored = true
AirglowLayer.Name = "Airglow"
AirglowLayer.CanCollide = false
AirglowLayer.Size = Vector3.new(1,1,1)
AirglowLayer.Color = Color3.new(58/255, 125/255, 21/255)
AirglowLayer.Orientation = Vector3.new(0,0,0)
AirglowLayer.CastShadow = false
AirglowLayer.Material = "ForceField"
AirglowLayer.Transparency = script.Customize.EnableAirglow.AirglowTransparency.Value
local AirglowMesh = Instance.new("FileMesh",AirglowLayer)
AirglowMesh.MeshId = "rbxassetid://1886703108"
AirglowMesh.TextureId = "rbxassetid://2013298"
AirglowMesh.VertexColor = Vector3.new(0,1,0)
AirglowTransparency = 0
local BottomAtmosphere = Instance.new("Part",AtmosphereModel)
BottomAtmosphere.Anchored = true
BottomAtmosphere.Name = "BottomAtmosphere"
BottomAtmosphere.CanCollide = false
BottomAtmosphere.Size = Vector3.new(1,1,1)
BottomAtmosphere.Color = Color3.new(33/255, 84/255, 185/255)
BottomAtmosphere.Orientation = Vector3.new(0,90,-90)
BottomAtmosphere.CastShadow = false
BottomAtmosphere.Material = "ForceField"
BottomAtmosphere.Transparency = 0.6
local BottomAtmosphereMesh = Instance.new("FileMesh",BottomAtmosphere)
BottomAtmosphereMesh.MeshId = "rbxassetid://5276376752"
BottomAtmosphereMesh.TextureId = "rbxassetid://2013298"
BottomAtmosphereMesh.VertexColor = Vector3.new((115/255)*2,(152/255)*2,2)
BottomAtmosphereMesh.Scale = Vector3.new(400,3000,3000)
local ExtinctionSunsetTransparencyEquation = 1
local Sun3D = script.Customize.EnableSun.Sun3D:Clone()
Sun3D.Parent = AtmosphereModel
local BottomAtmosphereDarkness = Instance.new("Decal", BottomAtmosphere)
BottomAtmosphereDarkness.Texture = "rbxassetid://7983012824"
Sun3D.Transparency = 0.011
game.Lighting.EnvironmentDiffuseScale = 0

if FindServerClockTime ~= nil then
	ClockTimeExists = true
else
	ClockTimeExists = false
end

if ClockTimeExists == true and script.Customize.EnableApparentPlanetRotation["EnableApparentSunMovement (EXPERIMENTAL)"].Value == true then
	InitialTime = workspace.ServerClockTime.Value%24
else
	InitialTime = game.Lighting.ClockTime
end

-- Replacement Sun. Why? SunRays can't pass through opaque parts and the atmosphere has to be opaque to prevent any transparency glitches.

local function onPlayerEntered(character)
	local SunTextureGui;
	do
		for i,v in pairs(script.Parent:GetChildren()) do
			if v:IsA("ScreenGui") then
				SunTextureGui = v
				break
			end
		end
		if not SunTextureGui then 
			SunTextureGui = Instance.new("ScreenGui", game.Players.LocalPlayer.PlayerGui)
			SunTextureGui.DisplayOrder = -1 
			SunTextureGui.Name = "Sun"
		end
	end
	local SunTexture = Instance.new("ImageLabel",SunTextureGui)
	SunTexture.Image = script.Customize.EnableSun.SunshineTexture.Value
	SunTexture.BackgroundTransparency = 1
	SunTexture.Size = UDim2.new(0,1000,0,1000)
	SunTexture.AnchorPoint = Vector2.new(0.5,0.5)
	SunTexture.ZIndex = 1
	local IsObstructed = false
	local SunTexture2 = Instance.new("ImageLabel",SunTextureGui)
	SunTexture2.Image = "rbxassetid://5200654205"
	SunTexture2.BackgroundTransparency = 1
	SunTexture2.Size = UDim2.new(0,(2100/Camera.FieldOfView),0,(2100/Camera.FieldOfView))
	SunTexture2.AnchorPoint = Vector2.new(0.5,0.5)
	SunTexture2.ZIndex = 2
	local SunTexture3 = SunTexture:Clone()
	SunTexture3.Parent = SunTextureGui
	
	Earth.Orientation = script.Customize.EnableApparentPlanetRotation.InitialPlanetOrientation.Value
	SunOffsetX = 0
	SunOffsetZ = 0
	
	Run:UnbindFromRenderStep("Sunshine")
	Run:BindToRenderStep("Sunshine", Enum.RenderPriority.Last.Value, function()
		
		if script.Customize.EnableSun.Value == true then
			SunTextureGui.Enabled = true
			Sky.SunTextureId = "rbxasset://sky/sun.jpg"
		else
			SunTextureGui.Enabled = false
			Sky.SunTextureId = ""
		end
		
		local ScaleFactor = (script.Customize.Scale.Value)^-1
		local x = (Camera.CFrame.Position.Y+script.Customize.AltitudeOffset.Value)*ScaleFactor
		local SunBrightness = script.Customize.EnableSun.SunBrightness.Value
		local SunDirectionV = game.Lighting:GetSunDirection()
		local sunPosition = Camera.CoordinateFrame.p+SunDirectionV * 999
		local screenPosition, isVisible = Camera:WorldToScreenPoint(sunPosition)
		local CamToSun = Ray.new(Camera.CoordinateFrame.p, SunDirectionV * 999)
		local CamToSunDirection = (SunDirectionV * 999)-Camera.CFrame.LookVector
		local ignore = {}
		local SunElevation = math.deg(math.atan((CamToSunDirection.y)/math.sqrt(CamToSunDirection.x^2+CamToSunDirection.z^2)))
		local HorizonElevation = -math.deg(math.acos(20925656.2/(20925656.2+x)))
		local CamZoomDistance = (Camera.Focus.Position - Camera.CFrame.Position).Magnitude
		local HorizonElevationSunsetDifference = SunElevation-HorizonElevation
		local ApparentDiameter = script.Customize.EnableSun.SunApparentDiameter.Value
		local SunExtinctionColorR = script.Customize.EnableSun.SunAtmosphericExtinctionColor.Value.R*255
		local SunExtinctionColorG = script.Customize.EnableSun.SunAtmosphericExtinctionColor.Value.G*255
		local SunExtinctionColorB = script.Customize.EnableSun.SunAtmosphericExtinctionColor.Value.B*255
		local SunExtinctionColorIntermediateR = script.Customize.EnableSun.SunAtmosphericExtinctionIntermediateColor.Value.R*255
		local SunExtinctionColorIntermediateG = script.Customize.EnableSun.SunAtmosphericExtinctionIntermediateColor.Value.G*255
		local SunExtinctionColorIntermediateB = script.Customize.EnableSun.SunAtmosphericExtinctionIntermediateColor.Value.B*255
		local SunsetFOVTransparencyScale = 1 - math.clamp(((workspace.CurrentCamera.FieldOfView - 5) / 5 + 1) 
			* (HorizonElevationSunsetDifference ^ 3 / 10), 0, 1)
		local H1 = 6*(2^(-x/500000))

		if HorizonElevationSunsetDifference <= 0 then
			HorizonElevationSunsetDifference10 = 0
		elseif HorizonElevationSunsetDifference > 0 and HorizonElevationSunsetDifference <= H1 then
			HorizonElevationSunsetDifference10 = HorizonElevationSunsetDifference
		elseif HorizonElevationSunsetDifference > H1 then
			HorizonElevationSunsetDifference10 = H1
		end
		local HorizonElevationSunsetDifference10Ratio = HorizonElevationSunsetDifference10 / H1
		local HorizonElevationSunsetDifference10Ratio3 = (math.clamp(HorizonElevationSunsetDifference10, 0, 2) * 3) / H1
		local HorizonElevationSunsetDifference10Ratio1_5 = (math.clamp(HorizonElevationSunsetDifference10, 0, 1) * 6) / H1

		table.insert(ignore,Atmosphere)
		if CamZoomDistance <= 1.1 then -- Check if player is in first person.
			table.insert(ignore,Character)
		elseif CamZoomDistance > 1.1 then
			ignore[Character] = nil
		end
		
		-- Checks if something is blocking the Sun
		local Obstructed, hitPosition = workspace:FindPartOnRayWithIgnoreList(CamToSun,ignore)
		SunTexture.Position = UDim2.new(0,screenPosition.x,0,screenPosition.y)
		SunTexture2.Position = UDim2.new(0,screenPosition.x,0,screenPosition.y)
		SunTexture3.Position = UDim2.new(0,screenPosition.x,0,screenPosition.y)

		if Obstructed then 
			IsObstructed = true
		else
			IsObstructed = false
		end

		if isVisible then -- Converts the Sun's location in the sky to position coordinates of the shine gui.
			local AltitudeSunTransparencyFadeRate = math.clamp(-0.00000133333333333 * x + 0.75666666666666, 0.55, 0.75)
			SunTexture.ImageTransparency = 1 - math.clamp(
				((2 - (2.6111111111111 * AltitudeSunTransparencyFadeRate))
					* 30 * (HorizonElevationSunsetDifference10Ratio3 + 0.55
						- AltitudeSunTransparencyFadeRate - SunsetFOVTransparencyScale)),
				0,
				1
			)
			SunTexture:TweenSize(
				UDim2.new(
					0, 100 + HorizonElevationSunsetDifference10Ratio * 900*SunBrightness*(-((Camera.FieldOfView-70)/200)+1),
					0, 100 + HorizonElevationSunsetDifference10Ratio * 900*SunBrightness*(-((Camera.FieldOfView-70)/200)+1)
				),
				Enum.EasingDirection.Out,
				Enum.EasingStyle.Quad,
				0.1,
				true
			)
			SunTexture2.ImageTransparency = 1 - math.clamp(
				((2 - (2.6111111111111 * AltitudeSunTransparencyFadeRate))
					* 30 * (HorizonElevationSunsetDifference10Ratio1_5 + 0.55
						- AltitudeSunTransparencyFadeRate - SunsetFOVTransparencyScale)),
				0,
				1
			)
			SunTexture2:TweenSize(
				UDim2.new(
					0, ((2.5*Camera.ViewportSize.Y*ApparentDiameter/31.983)/Camera.FieldOfView)*SunBrightness,
					0, ((2.5*Camera.ViewportSize.Y*ApparentDiameter/31.9)/Camera.FieldOfView)*SunBrightness
				),
				Enum.EasingDirection.Out,
				Enum.EasingStyle.Quad,
				0.1,
				true
			)
			local SunApparentDiameterRatio = script.Customize.EnableSun.SunApparentDiameter.Value / 31.983
			Sun3D.SunsetLight.Light.ImageTransparency = HorizonElevationSunsetDifference10Ratio
			Sun3D.Mesh.Scale = Vector3.new(
				12.25,
				10.5 + (1.75 * HorizonElevationSunsetDifference10Ratio),
				12.25
			) * SunApparentDiameterRatio
			if IsObstructed == true then
				SunTexture:TweenSize(UDim2.new(0,-5,0,-5),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true)
				SunTexture2:TweenSize(UDim2.new(0,-5,0,-5),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true)
			elseif SunElevation <= HorizonElevation then
				SunTexture:TweenSize(UDim2.new(0,-5,0,-5),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true)
				SunTexture2:TweenSize(UDim2.new(0,-5,0,-5),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true)
			elseif HorizonElevation ~= HorizonElevation then
				SunTexture:TweenSize(UDim2.new(0,-5,0,-5),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true)
				SunTexture2:TweenSize(UDim2.new(0,-5,0,-5),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true)
			end
			SunTexture3.Size = UDim2.new(0, SunTexture.Size.X.Offset / 2, 0, SunTexture.Size.Y.Offset / 2)
			SunTexture3.ImageColor3 = Color3.new(
				SunTexture.ImageColor3.R * 1.5,
				SunTexture.ImageColor3.G * 1.5,
				SunTexture.ImageColor3.B * 1.5
			)
			SunTexture3.Position = SunTexture.Position
			SunTexture3.Rotation = SunTexture.Rotation
			SunTexture3.ImageTransparency = SunTexture.ImageTransparency
		else
			SunTexture:TweenSize(UDim2.new(0,-5,0,-5),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true)
			SunTexture2:TweenSize(UDim2.new(0,-5,0,-5),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.1,true)
			SunTexture3.Size = SunTexture.Size
		end

		if SunTexture.Size.X.Offset <= 0 then -- To ensure the Sun is completely invisible when player is facing away from the Sun.
			SunTexture.Visible = false
			SunTexture2.Visible = false
			SunTexture3.Visible = false
		else
			SunTexture.Visible = true
			SunTexture2.Visible = true
			SunTexture3.Visible = true
		end

		-- Sun Temperature
		local TempValue = math.clamp(script.Customize.EnableSun.SunTemp.Value, 2001, math.huge)
		if script.Customize.EnableSunsetScattering.Value == false then
			TempValue = script.Customize.EnableSun.SunTemp.Value
		end
		local Temp = (TempValue + 1095) / 100
		if TempValue <= 0 then
			SunR = 255
			SunG = 76
			SunB = 0
		elseif TempValue > 0 and TempValue <= 1000 then
			SunR = 255
			SunG = 99.4708025861*math.log(Temp)-161.1195681661
			SunB = 0
		elseif TempValue > 1000 and TempValue <= 2000 then
			SunR = 255
			SunG = 104.49216199393888*math.log(Temp-2)-0.44596950469579133*Temp-155.25485562709179
			SunB = 0
		elseif TempValue > 2000 and TempValue <= 6600 then
			SunR = 255
			SunG = 104.49216199393888*math.log(Temp-2)-0.44596950469579133*Temp-155.25485562709179
			SunB = 115.67994401066147*math.log(Temp-10)+0.8274096064007395*Temp-254.76935184120902
		elseif TempValue > 6600 and TempValue <= 40000 then
			SunR = -40.25366309332127*math.log(Temp-55)+0.114206453784165*Temp+351.97690566805693
			SunG = -28.0852963507957*math.log(Temp-50)+0.07943456536662342*Temp+325.4494125711974
			SunB = 255
		elseif TempValue > 40000 then
			SunR = 162
			SunG = 192
			SunB = 255
		end

		local H2 = (3*(2^(-x/500000)))
		if script.Customize.EnableSunsetScattering.Value then
			local IntermediateColor = Color3.new(
				math.clamp(((((SunR-math.clamp(SunExtinctionColorIntermediateR, 0, SunR - 1))/(H2*(2^(-x/500000))))
					*(math.clamp(HorizonElevationSunsetDifference10, H2, H2 * 2)-H2))+SunExtinctionColorIntermediateR)/255, 0, 1),
				math.clamp(((((SunG-math.clamp(SunExtinctionColorIntermediateG, 0, SunG - 1))/(H2*(2^(-x/500000))))
					*(math.clamp(HorizonElevationSunsetDifference10, H2, H2 * 2)-H2))+SunExtinctionColorIntermediateG)/255, 0, 1),
				math.clamp(((((SunB-math.clamp(SunExtinctionColorIntermediateB, 0, SunB - 1))/(H2*(2^(-x/500000))))
					*(math.clamp(HorizonElevationSunsetDifference10, H2, H2 * 2)-H2))+SunExtinctionColorIntermediateB)/255, 0, 1)
			)
			SunTexture.ImageColor3 = Color3.new(
				(((((IntermediateColor.R*255)-SunExtinctionColorR)/(6*(2^(-x/500000))))*HorizonElevationSunsetDifference10)+SunExtinctionColorR)/255,
				(((((IntermediateColor.G*255)-SunExtinctionColorG)/(6*(2^(-x/500000))))*HorizonElevationSunsetDifference10)+SunExtinctionColorG)/255,
				(((((IntermediateColor.B*255)-SunExtinctionColorB)/(6*(2^(-x/500000))))*HorizonElevationSunsetDifference10)+SunExtinctionColorB)/255
			)
		else
			SunTexture.ImageColor3 = Color3.new(
				(((SunR-SunExtinctionColorR)/(6*(2^(-x/500000)))*HorizonElevationSunsetDifference10)+SunExtinctionColorR)/255,
				((((SunG-SunExtinctionColorG)/(6*(2^(-x/500000))))*HorizonElevationSunsetDifference10)+SunExtinctionColorG)/255,
				((((SunB-SunExtinctionColorB)/(6*(2^(-x/500000))))*HorizonElevationSunsetDifference10)+SunExtinctionColorB)/255
			)
		end
		SunTexture.Rotation = -(screenPosition.x-Camera.ViewportSize.X/2)/100 -- Sunshine rotation as a function of the screen's x-axis.

		-- 3D SUNSET

		if game.Lighting.ClockTime < 12 then
			Sun3D.SunsetLight.ExtentsOffsetWorldSpace = Vector3.new(5, 0, 0)
		else
			Sun3D.SunsetLight.ExtentsOffsetWorldSpace = Vector3.new(-5, 0, 0)
		end

		local AboveHorizon = HorizonElevationSunsetDifference > -2
		if x > 5000 then
			AboveHorizon = HorizonElevationSunsetDifference > 0
		elseif x > 1000 and x <= 5000 then
			AboveHorizon = HorizonElevationSunsetDifference > -0.5
		end
		if script.Customize.EnableSun.Value then
			if AboveHorizon and HorizonElevationSunsetDifference < H1 then
				Sun3D.Position = Camera.CFrame.Position
				Sun3D.Mesh.Offset = Vector3.new(70000, 70000, 70000) * SunDirectionV
			else
				Sun3D.Position = Vector3.new(0, -200000, 0)
				Sun3D.Mesh.Offset = Sun3D.Position
			end
			Sun3D.SunsetLight.StudsOffsetWorldSpace = Sun3D.Mesh.Offset
			Sun3D.SunsetLight.Brightness = math.clamp(400 - (x / 28), 40, 400)
			Sun3D.SunsetLight.Size = UDim2.new(10000 * SunBrightness, 0, math.clamp((-x / 16) + 10000, 4000, 10000) * SunBrightness, 0)
			Sun3D.SunsetLight.Light.ImageColor3 = script.Customize.EnableSun.ThreeDimensionalSunAtmosphericExtinctionColor.Value
		else
			Sun3D.Position = Camera.CFrame.Position - Vector3.new(0, 100000, 0)
		end
	end)
end

repeat wait() until Character
onPlayerEntered(Character)
game.Players.LocalPlayer.CharacterAdded:Connect(onPlayerEntered)
